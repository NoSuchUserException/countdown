<!DOCTYPE html>
<!-- saved from url=(0050)http://etarim-cs410-winona.mybluemix.net/TestPlan/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>Test Plan for Team Project</title>
	
	<link rel="stylesheet" href="./Test Plan for Team Project_files/style.css">
</head>
<body>
<h1>Test Plan for Team Project</h1>
<hr>
<h2>Table of Contents</h2>
<ul>
<li><a href="http://etarim-cs410-winona.mybluemix.net/TestPlan/#TestStrategy">Test Strategy</a></li> 
<li><a href="http://etarim-cs410-winona.mybluemix.net/TestPlan/#TestTools">Test tools</a></li> 
<li><a href="http://etarim-cs410-winona.mybluemix.net/TestPlan/#TestedItems">Tested Items</a></li> 
<li><a href="http://etarim-cs410-winona.mybluemix.net/TestPlan/#TestAssignments">Test Assignments</a></li> 
<li><a href="http://etarim-cs410-winona.mybluemix.net/TestPlan/#RequirementsTraceability">Requirements Traceability</a></li> 
<li><a href="http://etarim-cs410-winona.mybluemix.net/TestPlan/#TestingSchedule">Testing Schedule</a></li> 
<!-- <li><a href="#HardwareSoftwareRequirements">Hardware / Software Requirements</a></li> -->
<li><a href="http://etarim-cs410-winona.mybluemix.net/TestPlan/#Constraints">Constraints</a></li> 
<li><a href="http://etarim-cs410-winona.mybluemix.net/TestPlan/#ContributionsSummary">Contributions Summary</a></li> 
<li><a href="http://etarim-cs410-winona.mybluemix.net/TestPlan/#AcceptanceParagraph">Acceptance Paragraph</a></li> 

</ul>


<hr>
<h2 id="TestStrategy">Test Strategy</h2>
<p>Team Etarium's testing strategy includes manual testing of individual units, components, and systems with respect to the system requirements 
specification as well as design diagrams. Logs will be kept and maintained for manual testing, with passes and failures determined by the requirements 
documentation. More detailed information regarding the tests and their results will follow within the document under their respective headings.

</p>
<hr>
<h2 id="TestTools">Test Tools</h2>
<p>
After performing a cost-benefit analysis regarding the utilization of automated testing tools, Team Etarium feels that manual testing without specialized tools would be the most productive use of our time and resources. Testing during the development of our product would, of course, benefit from the use of automated test tools, but the ramp-up time for learning and writing useful tests could be better spent performing broader tests across the system.
</p><hr>
<h2 id="TestedItems">Tested Items</h2>
<p>
This section will be filled in as testing has been completed on individual units. The template will be followed as shown:
</p>
<br><br>
<blockquote>
<p>Completed/Tested Units:</p>
    <li>Unit_1</li>
    <li>Unit_2</li>
    <li>Unit_3</li>
    <li><i>individual units to be added as their testing is completed</i></li>
</blockquote>
<hr>
<h2 id="TestAssignments">Test Assignments</h2>
<p>
Describe the testing assignments made to members of your team. 
</p>

<p>

Sam - GUI Testing . <br>

Ben - Testing the Database <br>

Jason -  Testing character Creation and Combat <br>

Emily - Testing storyline and commands.    <br>

</p>

<hr>
<h2 id="RequirementsTraceability">Requirements Traceability</h2>
<p>
Create a traceability matrix between testcases and requirements. <br>
</p>
<p>
</p><table border="1">
             <caption>Traceability Matrix</caption>
          <thead>
             <tr>
                <th scope="col">Section &amp; Requirement</th>
                <th scope="col">Test Case</th>    
             </tr>
          </thead>
          <tbody>
              <tr>
                  <td><b>Game Overview</b></td>
              </tr>
             <tr>
                <td>0.1</td>           
                <td>Connects to Remote Database</td>
             </tr>
              <tr>
                  <td>0.2</td>
                  <td>Connects to Remote Database</td>
              </tr>
              <tr>
                  <td>0.3</td>
                  <td>Open Windowed Application</td>
              </tr>
              <tr>
                  <td>0.4</td>
                  <td>Java class checks for Save Files</td>
              </tr>
              <tr>
                  <td>0.5</td>
                  <td>If 0.4 false, 'New Game' is only available selector</td>
              </tr><tr>
                  <td>0.6</td>
                  <td>Launches Character Creation classes</td>
              </tr><tr>
                  <td>0.7</td>
                  <td>Validate Text Input - general</td>
              </tr><tr>
                  <td>0.7</td>
                  <td>Validate Text Input - general, exception handling</td>
              </tr><tr>
                  <td>0.8</td>
                  <td>Output Result Text</td>
              </tr><tr>
                  <td>0.9</td>
                  <td>Validate whether in encounter or explore state</td>
              </tr><tr>
                  <td>0.10</td>
                  <td>Connects to Remote Database</td>
              </tr><tr>
                  <td>0.10</td>
                  <td>Parameters pass and generate objects in respective Java Class</td>
              </tr>
              <tr>
                  <td><b>Winning The Game</b></td>
              </tr>
              <tr>
                  <td>1.1</td>
                  <td>This is a meme. It is not tested.</td>
              </tr><tr>
                  <td>1.2</td>
                  <td>Validate quest objective states have been marked complete</td>
              </tr><tr>
                  <td>1.3</td>
                  <td>This is a non-functional, non-testable requirement.</td>
              </tr><tr>
                  <td>1.4</td>
                  <td>Connects to Remote Database</td>
              </tr><tr>
                  <td>1.4</td>
                  <td>Parameters pass and generate objects in respective Java Class</td>
              </tr>
              <tr>
                  <td><b>Character Creation</b></td>
              </tr>
              <tr>
                  <td>2.1</td>
                  <td>Check for Entity with player value</td>
              </tr><tr>
                  <td>2.2</td>
                  <td>If 2.1 false, Launches Character Creation classes</td>
              </tr><tr>
                  <td>2.3</td>
                  <td>Check for Entity with player value</td>
              </tr><tr>
                  <td>2.4</td>
                  <td>Validate Entity object has 'playerclass' parameter</td>
              </tr><tr>
                  <td>2.5</td>
                  <td>Object can act upon other classes</td>
              </tr>
              <tr>
                  <td><b>Navigation</b></td>
              </tr>
              <tr>
                  <td>3.1</td>
                  <td>Validate map component</td>
              </tr><tr>
                  <td>3.2</td>
                  <td>Validate Text Input - general</td>
              </tr><tr>
                  <td>3.3</td>
                  <td>Validate Text Input - general, exception handling</td>
              </tr><tr>
                  <td>3.4</td>
                  <td>Output Result Text </td>
              </tr><tr>
                  <td>3.5</td>
                  <td>Validate objects within cell</td>
              </tr><tr>
                  <td>3.5</td>
                  <td>Launch Encounter class</td>
              </tr>
              <tr>
                  <td><b>Encounters</b></td>
              </tr><tr>
                  <td>4.1</td>
                  <td>Launch Encounter class</td>
              </tr><tr>
                  <td>4.2</td>
                  <td>Validate Encounter class operates recursively</td>
              </tr><tr>
                  <td>4.3</td>
                  <td>Validate text input - encounters</td>
              </tr><tr>
                  <td>4.4</td>
                  <td>Validate text input - encounters, exception handling</td>
              </tr><tr>
                  <td>4.5</td>
                  <td>Validate text input - encounters, exception handling</td>
              </tr><tr>
                  <td>4.6</td>
                  <td>Validate Encounter class operates recursively</td>
              </tr><tr>
                  <td>4.7</td>
                  <td>Exit Encounter class</td>
              </tr>
              <tr>
              <td><b>Interacting With Environment</b></td>
              </tr>
              <tr>
                  <td>5.1</td>
                  <td>Connects to Remote Database</td>
              </tr><tr>
                  <td>5.2</td>
                  <td>Validate text input - general</td>
              </tr><tr>
                  <td>5.2</td>
                  <td>Validate text input - general, exception handling</td>
              </tr><tr>
                  <td>5.3</td>
                  <td>Connects to Remote Database</td>
              </tr><tr>
                  <td>5.4</td>
                  <td>Verify system does not print all object data</td>
              </tr><tr>
                  <td>5.5</td>
                  <td>Connects to Remote Database</td>
              </tr>
              <tr>
              <td><b>Interacting With NPCs</b></td>
              </tr>
              <tr>
                  <td>6.1</td>
                  <td>Entity class contains a parameter to separate Friendly and Aggro</td>
              </tr><tr>
                  <td>6.2</td>
                  <td>Connects to Remote Database</td>
              </tr><tr>
                  <td>6.2</td>
                  <td>System evolution - nontestable object</td>
              </tr>
              <tr>
              <td><b>Saving A Game</b></td>
              </tr>
              <tr>
                  <td>7.1</td>
                  <td>Java class generates Save Files</td>
              </tr><tr>
                  <td>7.2</td>
                  <td>Java class generates Save Files</td>
              </tr>
              <tr>
                  <td>7.3</td>
                  <td>Java class generates Save Files</td>
              </tr><tr>
                  <td>7.4</td>
                  <td>Validate text input - general</td>
              </tr>
              </tbody>
              </table><hr>
<h2 id="TestingSchedule">Testing Schedule</h2>
<p>
Testing will be interleaved according to agile development menthods, and therefore will likely occur during standard meeting times/dates.<br>
These are as follows:
</p>

<blockquote>
    Mondays : 5pm - 7pm <br>
    Fridays : 5pm - 7pm
</blockquote>

<p>
Testing assignments will be reliant upon completed design assignments.
</p>
<hr>
<!--<h2 id="HardwareSoftwareRequirements">Hardware / Software Requirements</h2>
<p>
    Mac is currently the only supported OS. Windows support is planned but at the
    moment there is an issue with the UI in Windows.
</p> -->
<hr>
<h2 id="Constraints">Constraints</h2>
<p>
Describe any constraints on the testing you will do. 
</p>
<p>
    Constraints are being defined as "the point where the cost of testing no longer exceeds the value
received from the defects uncovered" (<a href="http://msqaa.org/Best_Practices/Quality_Control/TestConstraintsV2.pdf">MSQAA, 3</a>). <br>
Therefore, the testing will meet constraints when the system is operating at a functional state with basic requirements met. The system in this state is,
although unlikely, not immune to unexpected closures or force quitting of the program. The nature of our program is one where bugs are expected and patches occur.
This is an industry standard, and proper programming methodology, including modularity of code, is used to ease the burden of in-development testing and allow
the shippable product room to be improved upon in the case of an unexpected "bug".

</p><hr>
<h2 id="ContributionsSummary">Contributions Summary</h2>

<blockquote>
    <p>Emily - Test Strategy, Requirement Traceability, Constraint</p>
    <p>Ben   - Test Assignments</p>
    <p>Jason - Acceptance Paragraph</p>
    <p>Sam   - Test Tools, Tested Items, Testing Schedule, Contribution Summary</p>
</blockquote><hr>
<h2 id="AcceptanceParagraph">Acceptance Paragraph</h2>
<p>As the user representative, I feel that with video games, manual testing is by
far the most efficient course we could take for testing. In modern game companies,
QA can often be larger then development itself, and manual testing can often be
the most valuable, as regression testing can be ineffective during development,
as opposed to maintinance phases. As such, this test plan makes sense as a basis
for our development and end test phases.
</p>
<p>-Jason Richter, User Representative</p>
	
<hr>
<p>This section intentionally left blank. </p> 
<pre>















































</pre>
<p>END OF THE DOCUMENT</p>
<hr>



</body></html>